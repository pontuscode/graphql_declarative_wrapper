directive @wrap(type: String!, includeAllFields: Boolean, excludeFields: [String!], listQuery: String, singleQuery: String) on OBJECT
directive @wrap(path: [String!]!) on FIELD_DEFINITION
directive @wrap(field: String!) on FIELD_DEFINITION
directive @concatenate(values: [String]) on FIELD_DEFINITION

type MyTrack @wrap(type: "Track", listQuery: "tracksForHome", singleQuery: "track(id: ID!)") {
    id: ID! @wrap(field: "id")
    myTitle: String @wrap(field: "title")
    author: MyAuthor @wrap(field: "author")
    authorName: String @wrap(path: ["author", "name"])
    myModulesCount: Int @wrap(path: ["modulesCount"])
}

type MyAuthor @wrap(type: "Author") {
    id: ID! @wrap(field: "id")
    name: String @wrap(path: ["name"])
}

type MyModule @wrap(type: "Module", singleQuery: "module(id: ID!)") {
    id: ID! @wrap(field: "id")
    content: String @wrap(field: "content")
    concatenateTest: String @concatenate(values: ["content", " ", "videoUrl"])
}

type MyFullModule @wrap(type: "Module", singleQuery: "module(id: ID!)", includeAllFields: true, excludeFields: ["videoUrl"])

type MyFullTrack @wrap(type: "Track", singleQuery: "track(id: ID!)", listQuery: "tracksForHome", includeAllFields: true)